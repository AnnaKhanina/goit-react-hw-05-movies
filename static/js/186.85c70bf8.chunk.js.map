{"version":3,"file":"static/js/186.85c70bf8.chunk.js","mappings":"iMAqCA,UAjCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWN,GAASO,MAAK,SAAAC,GAAM,OAAIJ,EAAWI,EAAf,GAChC,GAAE,CAACR,KAEF,8BACGG,EAAQM,OAAS,GAChB,iCACE,qCACA,wBACGN,EAAQO,KAAI,SAAAC,GACX,IAAQC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,QAASC,EAAOH,EAAPG,GAEzB,OACE,2BACE,wBACE,uBAAIF,OAEN,uBAAIC,MAJGC,EAOZ,UAIL,sEAIP,C,4MClCKC,EAAM,mCAEZC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,WAAMC,GAAN,uFACFF,IAAAA,IAAA,sCACUD,EADV,iBACsBG,IAFpB,cACnBC,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,sDAOXC,EAAO,mCAAG,WAAMP,GAAN,uFACEE,IAAAA,IAAA,iBACXF,EADW,oBACGC,EADH,oBADF,cACfI,EADe,yBAIdA,GAJc,2CAAH,sDAOPb,EAAU,mCAAG,WAAMQ,GAAN,uFACDE,IAAAA,IAAA,gBACZF,EADY,4BACUC,EADV,2BADC,cAClBI,EADkB,yBAIjBA,EAASC,KAAKE,SAJG,2CAAH,sDAOVC,EAAU,mCAAG,WAAMT,GAAN,uFACDE,IAAAA,IAAA,iBACXF,EADW,4BACWC,EADX,oBADC,cAClBI,EADkB,yBAIjBA,EAASC,KAAKI,MAJG,2CAAH,sDAOVC,EAAc,mCAAG,WAAOP,EAAMQ,GAAb,uFACLV,IAAAA,IAAA,+BACGD,EADH,kBACgBW,EADhB,iBAC8BR,IAFzB,cACtBC,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,uD","sources":["components/Reviews/Reviews.jsx","services/getMovies.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviews } from '../../services/getMovies';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getReviews(movieId).then(result => setReviews(result));\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <>\n          <h2>Reviews</h2>\n          <ul>\n            {reviews.map(review => {\n              const { author, content, id } = review;\n\n              return (\n                <li key={id}>\n                  <p>\n                    <b>{author}</b>\n                  </p>\n                  <p>{content}</p>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\nexport default Reviews;","import axios from 'axios';\n\nconst KEY = '3e0adcf7517a0f187185de79b0c950b8';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async page => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${KEY}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const getInfo = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const getCredits = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getSearchQuery = async (page, query) => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}&page=${page}`\n  );\n  return response.data;\n};"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getReviews","then","result","length","map","review","author","content","id","KEY","axios","getTrending","page","response","data","getInfo","results","getCredits","cast","getSearchQuery","query"],"sourceRoot":""}